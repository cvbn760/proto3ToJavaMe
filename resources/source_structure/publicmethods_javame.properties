public.getmethods = \n\tpublic {0} get{1}() '{'\n\t\treturn {2};\n\t'}'\n
public.hasmethods = \n\tpublic boolean has{0}() '{'\n\t\treturn has{0};\n\t'}'\n

public.tostring.start = \n\tpublic String toString() {\n\t\tfinal String TAB = "   ";\n\t\tString retValue = "";\n\t\tretValue += this.getClass().getName() + "(";\n
public.tostring.fields = \t\tretValue += "{0} = " + this.{0} + TAB;\n
public.tostring.fields.optional = \t\tif(has{0}) retValue += "{1} = " + this.{1} + TAB;\n
public.tostring.end = \t\tretValue += ")";\n\n\t\treturn retValue;\n\t}\n

public.writeto.newbytearray = \n\tpublic byte[] toByteArray() throws IOException {\n\t\tfinal byte[] outputData = createByteArray();\n\t\twriteTo(outputData);\n\n\t\treturn outputData;\n\t}\n

public.writeto.bytearray = \n\tpublic void writeTo(final byte[] data) throws IOException '{'\n\t\tfinal {0} writer = {1}.createOutputUtil(data);\n\t\twriteFields(writer);\n\t'}'\n
public.writeto.outputstream = \n\tpublic void writeTo(final OutputStream outputStream) throws IOException '{'\n\t\tfinal byte[] outputData = createByteArray();\n\n\t\tfinal {0} writer = {1}.createOutputUtil(outputData, outputStream);\n\t\twriteFields(writer);\n\t'}'\n